{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Documents\\\\Coding Bootcamp by MIT\\\\Module 13 - Introduction to JSX\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log('form: ', values);\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = \"Field required\";\n      if (!values.password) errors.password = \"Field required\";\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(text)) errors.email = \"Username should be an email\";\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        values: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        values: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","console","log","alert","validate","errors","emailRegex","test","text","className","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","onChange","handleChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/gusta/Documents/Coding Bootcamp by MIT/Module 13 - Introduction to JSX/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {useFormik} from 'formik';\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: values => {\n      console.log('form: ', values);\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = \"Field required\";\n      if (!values.password) errors.password = \"Field required\";\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(text)) errors.email = \"Username should be an email\"\n      return errors;\n    }\n  });\n  return (\n    <div className=\"App\">\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input id=\"emailField\" name=\"email\" type=\"text\" onChange={formik.handleChange} values={formik.values.email}/>\n        {formik.errors.email ? <div id=\"emailError\" style={{color:'red'}}>{formik.errors.email}</div> : null}\n        <div>Password</div>\n        <input id=\"pswField\" name=\"password\" type=\"text\" onChange={formik.handleChange} values={formik.values.password}/>\n        {formik.errors.password ? <div id=\"pswError\" style={{color:'red'}}>{formik.errors.password}</div> : null}\n        <br/>\n        <br/>\n        <button id=\"submitBtn\" type=\"Submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}